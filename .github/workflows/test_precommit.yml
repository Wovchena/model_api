# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Precommit - Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CPP-Windows-Precommit:
    strategy:
      fail-fast: false
      matrix:
        ignored: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19']

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: 3.8
        cache: pip
    - name: Create and start a virtual environment
      shell: bash
      run: |
        python -m venv venv
        source venv/Scripts/activate
    - name: Install dependencies
      shell: bash
      run: |
        source venv/Scripts/activate
        python -m pip install --upgrade pip
        pip install model_api/python/[tests] --extra-index-url https://download.pytorch.org/whl/cpu
        curl https://storage.openvinotoolkit.org/repositories/openvino/packages/2023.0/windows/w_openvino_toolkit_windows_2023.0.0.10926.b4452d56304_x86_64.zip --output w_openvino_toolkit_windows.zip
        unzip w_openvino_toolkit_windows.zip
        rm w_openvino_toolkit_windows.zip
        curl -L https://github.com/opencv/opencv/releases/download/4.7.0/opencv-4.7.0-windows.exe --output opencv-4.7.0-windows.exe
        ./opencv-4.7.0-windows.exe -oopencv -y
    - name: Prepare test data
      shell: bash
      run: |
        source venv/Scripts/activate
        python tests/cpp/precommit/prepare_data.py -d data -p tests/cpp/precommit/public_scope.json
    - name: Build
      shell: bash
      run: |
        mkdir build && cd build
        MSYS_NO_PATHCONV=1 cmake ../tests/cpp/precommit/ -DOpenVINO_DIR=$GITHUB_WORKSPACE/w_openvino_toolkit_windows_2023.0.0.10926.b4452d56304_x86_64/runtime/cmake -DOpenCV_DIR=$GITHUB_WORKSPACE/opencv/opencv/build -DCMAKE_CXX_FLAGS=/WX
        cmake --build . --config Release -j $((`nproc`*2+2))
    - name: Run test
      shell: cmd
      # .\w_openvino_toolkit_windows_2023.0.0.10926.b4452d56304_x86_64\setupvars.bat exits with 0 code without moving to a next command. Set PATH manually
      run: |
        set PATH=opencv\opencv\build\x64\vc16\bin;w_openvino_toolkit_windows_2023.0.0.10926.b4452d56304_x86_64\runtime\bin\intel64\Release;w_openvino_toolkit_windows_2023.0.0.10926.b4452d56304_x86_64\runtime\3rdparty\tbb\bin;%PATH%
        .\build\Release\test_model_config -d data --gtest_repeat=-1 --gtest_break_on_failure
